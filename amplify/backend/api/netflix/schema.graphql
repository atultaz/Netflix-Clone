type Category @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  Movies: [CategoryMovie] @connection(keyName: "byCategory", fields: ["id"])
}

type Movie @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  poster: String!
  year: Int
  numberOfSeasons: Int
  plot: String
  cast: String
  creator: String
  seasons: [Season] @connection(keyName: "byMovie", fields: ["id"])
  categories: [CategoryMovie] @connection(keyName: "byMovie", fields: ["id"])
}

type Season @model @key(name: "byMovie", fields: ["movieID"]) @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  movieID: ID!
  movie: Movie @connection(fields: ["movieID"])
  episodes: [Episode] @connection(keyName: "bySeason", fields: ["id"])
}

type Episode @model @key(name: "bySeason", fields: ["seasonID"]) @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  poster: String!
  duration: String!
  plot: String
  video: String!
  seasonID: ID!
  season: Season @connection(fields: ["seasonID"])
}

type CategoryMovie @model(queries: null) @key(name: "byCategory", fields: ["categoryID", "movieID"]) @key(name: "byMovie", fields: ["movieID", "categoryID"]) @auth(rules: [{allow: private}, {allow: private}]) {
  id: ID!
  categoryID: ID!
  movieID: ID!
  category: Category! @connection(fields: ["categoryID"])
  movie: Movie! @connection(fields: ["movieID"])
}
 